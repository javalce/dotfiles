ZSH_HOME="$HOME/.config/zsh"

ZIM_HOME="$ZSH_HOME/zim"
ZIM_CONFIG_FILE="$ZSH_HOME/zimrc"

zstyle ':zim:termtitle' format '%1~'

# Download zimfw plugin manager if missing
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
    https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
fi

# Install missing modules, and update ${ZIM_HOME}/init.zsh if missing or outdated
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
  source ${ZIM_HOME}/zimfw.zsh init -q
fi

# Initialize modules
source ${ZIM_HOME}/init.zsh

# Initialize custom plugins
source ${ZSH_HOME}/plugins/javalce.plugin.zsh

# Initialize starship
if [[ $TERM_PROGRAM == "WarpTerminal" ]]; then
  export STARSHIP_CONFIG="$HOME/.config/starship/starship_warp.toml"
else
  export STARSHIP_CONFIG="$HOME/.config/starship/starship.toml"
fi
eval "$(starship init zsh)"

# Initialize zoxide
eval "$(zoxide init zsh)"

# FNM (Fast Node Manager)
export FNM_DIR="$HOME/.local/share/fnm"
case ":$PATH:" in
*":$FNM_DIR:"*) ;;
*)
  export PATH="$FNM_DIR:$PATH"
  eval "$(fnm env --use-on-cd)"
  ;;
esac

# pnpm
export PNPM_HOME="/home/javalce/.local/share/pnpm"
case ":$PATH:" in
*":$PNPM_HOME:"*) ;;
*) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# bun completions
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
case ":$PATH:" in
*":$BUN_INSTALL/bin:"*) ;;
*) export PATH="$BUN_INSTALL/bin:$PATH" ;;
esac

# console-ninja
case ":$PATH:" in
*":$HOME/.console-ninja/.bin:"*) ;;
*) export PATH="$HOME/.console-ninja/.bin:$PATH" ;;
esac

PATH=~/.console-ninja/.bin:$PATH
# bun completions
[ -s "/home/javalce/.local/share/reflex/bun/_bun" ] && source "/home/javalce/.local/share/reflex/bun/_bun"
