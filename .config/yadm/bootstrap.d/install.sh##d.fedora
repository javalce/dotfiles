#!/bin/sh

prepare_environment() {
    # Update system
    sudo dnf update -y

    # Install packages to allow apt to use a repository over HTTPS
    sudo dnf install -y ca-certificates curl gnupg wget git unzip tar

    # Install gitflow
    sudo dnf copr enable elegos/gitflow -y
    sudo dnf install -y gitflow

    # Shell completions
    mkdir -p "$HOME/.bash_completion.d" "$HOME/.zfunc"

    cat <<EOF >"$HOME/.bash_completion"
if [ -d "\$HOME/.bash_completion.d" ]; then
    for file in \$HOME/.bash_completion.d/*; do
        . "\$file"
    done
    unset file
fi
EOF
}

install_terminal_tools() {
    # Install zsh
    sudo dnf install -y zsh
    ln -sf ~/.config/zsh/zshrc ~/.zshrc

    # Install kitty terminal
    sudo dnf install -y kitty

    # Install vim and neovim editor
    sudo dnf install -y vim neovim

    # Install starship prompt theme
    curl -sS https://starship.rs/install.sh | sudo sh -s -- -y

    # Install zoxide, a smarter cd command
    sudo dnf install -y zoxide

    # Install ripgrep, a faster grep
    sudo dnf install -y ripgrep

    # Install tldr
    sudo dnf install -y tealdeer

    # Install bat, a cat clone with syntax highlighting
    sudo dnf install -y bat

    # Install rofi, an application launcher
    sudo dnf install -y rofi

    # Install fzf, a fuzzy finder
    sudo dnf install -y fzf

    # Install fd, a faster find
    sudo dnf install -y fd-find
}

install_fonts() {
    # Install JetBarins Mono font
    sudo dnf install -y jetbrains-mono-fonts-all

    # Install JetBrains Mono Nerd Font
    directory="$HOME/.local/share/fonts/nerd-fonts"
    mkdir -p "$directory"
    wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/JetBrainsMono.zip -P "$directory"
    if [ -d "$directory/jetbrains-mono" ]; then rm -rf "$directory/jetbrains-mono"; fi
    unzip "$directory/JetBrainsMono.zip" -d "$directory/jetbrains-mono"
    rm "$directory/JetBrainsMono.zip"
    unset directory

    # Install Cascadia Code font
    sudo dnf install -y cascadia-fonts-all
}

install_node() {
    FNM_DIR="$HOME/.local/share/fnm"

    # Install fnm, a node version manager
    curl -fsSL https://fnm.vercel.app/install | bash -s -- --skip-shell --install-dir "$FNM_DIR"

    # Add fnm to path
    export PATH="$FNM_DIR:$PATH"

    # Install nodejs
    fnm install lts-latest
    fnm default lts-latest

    # Add fnm to shell
    eval "$(fnm env)"

    # Add fnm completions
    fnm completions --shell bash >"$HOME/.bash_completion.d/_fnm"
    fnm completions --shell zsh >"$HOME/.zfunc/_fnm"

    # Update npm version
    npm install -g npm

    # Install global dependencies
    npm install -g @angular/cli

    # Install pnpm
    curl -fsSL https://get.pnpm.io/install.sh | sudo --user="$USER" sh -
}

install_python_tools() {
    # Install python dependencies
    sudo dnf install -y python-pip python-venv pipx

    # Install poetry
    pipx install poetry

    # Add poetry to PATH
    export PATH="$HOME/.local/bin:$PATH"

    # Install poetry completions
    poetry completions bash >"$HOME/.bash_completion.d/_poetry"
    poetry completions zsh >"$HOME/.zfunc/_poetry"
}

install_docker() {
    # Set up the repository
    sudo dnf -y install dnf-plugins-core
    sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo

    # Install Docker
    sudo dnf install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    # Start and enable the Docker service
    sudo systemctl enable docker
    sudo systemctl start docker

    # Add user to docker group
    sudo usermod -aG docker "$USER"
}

install_sdkman() {
    curl -s "https://get.sdkman.io" | bash

    # shellcheck source=/dev/null
    . "$HOME/.sdkman/bin/sdkman-init.sh"

    sdk install java 17.0.11-amzn
    sdk install maven 3.9.6
}

prepare_environment
install_terminal_tools
install_fonts
install_node
install_python_tools
install_docker
install_sdkman
