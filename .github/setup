#!/bin/bash

set -euo pipefail

SSH=
REPO=
NO_BOOTSTRAP=
BACKUP_FILES=(
  "$HOME/.bashrc"
  "$HOME/.profile"
  "$HOME/.zshrc"
  "$HOME/.config/fish"
)

parse_args() {

  for key in "$@"; do
    case $key in
      --ssh)
        SSH="true"
        ;;
      --no-bootstrap)
        NO_BOOTSTRAP="true"
        ;;
      *)
        echo "Unrecognized argument $key"
        exit 1
        ;;
    esac
  done
}

set_repo() {
  if [ "$SSH" == "true" ]; then
    REPO="git@github.com:javalce/dotfiles.git"
  else
    REPO="https://github.com/javalce/dotfiles.git"
  fi
}

check_dependencies() {
  echo "Checking dependencies for the setup script..."
  SHOULD_EXIT=

  echo -n "Checking availability of yadm... "
  if hash yadm 2>/dev/null; then
    echo "OK!"
  else
    echo "Missing"
    SHOULD_EXIT="true"
  fi

  if [ "$SHOULD_EXIT" == "true" ]; then
    echo "Not running the setup script due to missing dependencies."
    exit 1
  fi
}

backup_files() {
  echo "Backing up files..."
  for file in "${BACKUP_FILES[@]}"; do
    if [ -d "$file" ]; then
      backup_file="$file.bak"
      echo "Backing up $file to $backup_file"
      cp -r "$file" "$backup_file"
    elif [ -f "$file" ]; then
      backup_file="$file.bak"
      echo "Backing up $file to $backup_file"
      cp "$file" "$backup_file"
    fi
  done
}

bootstrap() {
  echo "Cloning the repository $REPO..."
  yadm clone --no-bootstrap "$REPO"

  yadm checkout "$HOME"

  if [ "$NO_BOOTSTRAP" != "true" ]; then
    echo "Bootstrapping the repository..."
    yadm bootstrap
  else
    echo "Skipping bootstrap..."
  fi
}

parse_args "$@"
set_repo
check_dependencies
backup_files
bootstrap